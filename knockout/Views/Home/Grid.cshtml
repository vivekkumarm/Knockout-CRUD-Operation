@model knockout.Models.UserDetail

@{
    ViewBag.Title = "Grid";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Grid</h2>


@using (Html.BeginForm())
{
   
    @Html.LabelFor(sm=>sm.FirstName)
    @Html.TextBoxFor(sm => sm.FirstName, new { data_bind = "value: firstName" })
   
    @Html.LabelFor(sm=>sm.LastName)
    @Html.TextBoxFor(sm => sm.LastName, new { data_bind = "value: lastName" })

    @Html.LabelFor(sm=>sm.Bdate)
    @Html.TextBoxFor(sm => sm.Bdate, new { data_bind = "value: birthdate" })

     <button data-bind="click: UserdetailSubmit">Add</button>
    
    <button data-bind="click: UpdatePerson">Update</button>
}


<table border="0" cellpadding="0"  cellspacing="0" style="width:100%">
<tr class="DataGridHeader">
@*<td style="width:10%; height:25px">User ID</td>*@
<td style="width:10%">First Name</td>
<td style="width:10%">Last Name</td>
<td style="width:10%">B Date</td>
<td style="width:10%">Action</td>
</tr>
 <tbody data-bind="foreach: UserDetailList">
            
            <tr data-bind="click: $root.getselectedemployee">

          @*  <td data-bind="text: UserId" style="display:none"></td>*@
                <td data-bind="text: FirstName"></td>
                <td data-bind="text: LastName"></td>
                <td data-bind="text: Bdate"></td>

                <td>
                     
                    <div style="width:25px; float:left"><img alt="edit" data-bind="click: $root.Getselecteddata" title="Edit item" src="@Url.Content("~/Content/Images/icon-pencil.gif")" /></div>
                    <div style="width:25px; float:left"><img alt="delete" data-bind="click: $root.deleterec"   title="Delete item" src="@Url.Content("~/Content/Images/icon-delete.gif")" /></div>
                    @*<button data-bind="click: $root.Getselecteddata">Edit</button>*@
                    @*<button data-bind="click: $root.deleterec">Delete</button>*@
                 </td>
            
        </tbody>
</table>

@section Scripts
{
         @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/KO")
    <script src="~/Scripts/knockout-2.3.0.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.debug.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.js"></script>
    <script type="text/javascript">
        function myViewModel() {
            var self = this;
            self.userId = ko.observable();
            self.firstName = ko.observable();
            self.lastName = ko.observable();
            self.birthdate = ko.observable();

            var UserDetails = {
              
                UserId: self.userId,
                FirstName: self.firstName,
                LastName: self.lastName,
                Bdate: self.birthdate
            };
            self.person = ko.observable("");

            //Inserting 
            self.UserDetailList = ko.observableArray();


            GetAllDetails();

            self.UserdetailSubmit = function () {
                var url = "/Home/Save";
                $.ajax({
                    url: url,
                    cache: false,
                    type: 'POST',
                    contentType: "application/json",
                    data: ko.toJSON(UserDetails),
                    success: function (data) {
                        GetAllDetails();
                        self.firstName("");
                        self.lastName("");
                        self.birthdate("");
                    }
                }).fail(
                         function (xhr, textStatus, err) {
                             alert(err);
                         });
            };

            //Updating
            this.UpdatePerson = function (employee) {
                debugger

                var url = "/Home/Update";

                $.ajax({
                    url: url,
                    cache: false,
                    type: 'PUT',
                    contentType: "application/json",
                    data: ko.toJSON(employee),
                    success: function (data) { 
                        GetAllDetails();
                        self.firstName("");
                        self.lastName("");
                        self.birthdate("");
                    }
                })
                       .fail(
                    function (xhr, textStatus, err) {
                        alert(err);
                    });
            };
            //Deleting
            debugger
            self.deleterec = function (employee) {
                debugger
                var url = "/Home/Delete";
                $.ajax({
                    type: 'DELETE',
                    url: url,
                    contentType: "application/json",
                    data: ko.toJSON(employee),
                    success: function (data) {
                        alert("Record Deleted Successfully");
                        GetAllDetails();//Refresh the Table
                    },
                    error: function (error) {
                        alert(error.status + "<--and--> " + error.statusText);
                    }
                });
                // alert("Clicked" + employee.EmpNo)
            };
            //Get User Details
            function GetAllDetails() {
                debugger
                var url = "/Home/Detail";
                $.ajax({
                    type: 'GET',
                    url: url,
                    contentType: "application/json",
                    data: {},
                    success: function (data) {
                        debugger
                        self.UserDetailList(data);                
                    },
                    error: function (error) {
                        alert(error.status + "<--and--> " + error.statusText);
                    }
                });
            }
            self.Getselecteddata = function (employee) {
                debugger
                self.userId(employee.UserId),
                            self.firstName(employee.FirstName),
                            self.lastName(employee.LastName),
                            self.birthdate(employee.Bdate)
            };
        }
        ko.applyBindings(new myViewModel());
        </script>
}